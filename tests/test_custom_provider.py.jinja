import uuid
from {{module_name}}.{{resource_file_name}} import {{resource_name}}Provider
import unittest


class {{resource_name}}Test(unittest.TestCase):

    def setUp(self):
        self.provider = {{resource_name}}Provider()
        self.handle = self.provider.handle

    def test_create(self):
        request = self.create_request('Create', Value="Red")
        response = self.handle(request, {})
        assert response['Status'] == 'SUCCESS', response['Reason']
        assert "Red" == response.get("PhysicalResourceId")
        assert "Red" == response["Data"].get("Value")


        physical_resource_id = response['PhysicalResourceId']
        request = self.create_request('Delete', physical_resource_id=physical_resource_id)
        response = self.handle(request, {})
        assert response['Status'] == 'SUCCESS', response['Reason']


    def test_update(self):
        request = self.create_request('Create', Value="Red")
        response = self.handle(request, {})

        assert response['Status'] == 'SUCCESS', response['Reason']
        assert 'PhysicalResourceId' in response

        physical_resource_id = response['PhysicalResourceId']
        request = self.create_request('Update', Value="Green", physical_resource_id=physical_resource_id)
        response = self.handle(request, {})

        assert response['Status'] == 'SUCCESS', response['Reason']
        assert "Green" == response.get("PhysicalResourceId")
        assert "Green" == response["Data"].get("Value")

        physical_resource_id = response['PhysicalResourceId']
        request = self.create_request('Delete', physical_resource_id=physical_resource_id)
        response = self.handle(request, {})
        assert response['Status'] == 'SUCCESS', response['Reason']

    @staticmethod
    def create_request(request_type, **kwargs) -> dict:
        request_id = uuid.uuid4()
        physical_resource_id = kwargs.get('physical_resource_id', f'initial-{request_id}')
        kwargs.pop('physical_resource_id', None)

        return {
            'RequestType': request_type,
            'ResponseURL': 'https://httpbin.org/put',
            'StackId': 'arn:aws:cloudformation:us-west-2:EXAMPLE/stack-name/guid',
            'RequestId': str(request_id),
            'ResourceType': '{{resource_type_name}}',
            'LogicalResourceId': '{{resource_name}}',
            'ResourceProperties': kwargs,
            'PhysicalResourceId': physical_resource_id,
        }

